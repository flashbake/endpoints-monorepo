name: publish

on: [push]

jobs:
  publish-to-ghcr:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: 'true'

    - name: Login to registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
    - name: Docker meta relay
      id: meta-relay
      uses: docker/metadata-action@v3
      with:
        images: ghcr.io/${{ github.repository_owner }}/relay
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=match,pattern=v(.*),group=1

    - name: Docker meta endpoint
      id: meta-endpoint
      uses: docker/metadata-action@v3
      with:
        images: ghcr.io/${{ github.repository_owner }}/baker-endpoint
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=match,pattern=v(.*),group=1
    - name: Push flashbake endpoint container to GHCR
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: ${{ steps.meta-endpoint.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        file: Dockerfile.baker-endpoint

    - name: Push flashbake relay container to GHCR
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: ${{ steps.meta-relay.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        file: Dockerfile.relay

  lint_helm_charts:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.8.1

      - name: Lint Helm Charts
        run: helm lint helm/*

  publish_helm_charts:
    runs-on: ubuntu-latest
    needs: [test-helm-charts, lint_helm_charts, publish-to-ghcr]
    if: github.event_name == 'release' && github.event.action == 'created'
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install yq
        run: |
          sudo wget -q https://github.com/mikefarah/yq/releases/download/v4.2.0/yq_linux_amd64 -O /usr/bin/yq
          sudo chmod +x /usr/bin/yq

      - name: Get Release Version
        id: get_release_version
        run: echo "::set-output name=RELEASE_VERSION::${GITHUB_REF/refs\/tags\//}"

      - name: Set Helm Chart and Image Versions
        run: |
          set -x

          RELEASE_VERSION=${{ steps.get_release_version.outputs.RELEASE_VERSION }}

            [[ ! -d "$chart" ]] && continue
            for chart in helm/*; do
            echo $chart

            # Update Chart.yaml with release version
            yq e ".version = \"$RELEASE_VERSION\"" -i "$chart/Chart.yaml"

            # Update tag version in default values.yaml
            yq e ".images.tag = \"$RELEASE_VERSION\"" -i $chart/values.yaml
          done

      - name: Publish Helm charts
        uses: stefanprodan/helm-gh-pages@master
        with:
          linting: off # We already linted in a job before
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: gh-pages
